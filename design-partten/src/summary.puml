@startuml

object Proxy
object Adapter
object Bridge

Command --> Composite: 使用组合命令
Composite --> Iterator: 枚举子女
Flyweight <-- State: 共享状态
Flyweight <-- Interpreter: 共享终结符
Composite --> Decorator: 给对象增加职责
Composite --> Builder: 创建组合
Visitor <-- Composite : 增加操作
Composite --> Flyweight : 共享组合
Composite <-- Interpreter : 定义语法
Composite <-- Chain_of_Responsibillity: 定义链
Iterator --> Memento: 保存枚举状态
Memento <-- Command: 避免滞后
Decorator --> Strategy: 改变外表，改变内容
Strategy --> Flyweight: 共享策略
Interpreter --> Visitor: 增加操作
Visitor --> Iterator: 定义遍历
Strategy <-- Template_Method
Factory_Method <-- Template_Method: 经常使用
Factory_Method <-- Abstrac_Factory: 用工厂方法实现
Prototype <-- Abstrac_Factory: 动态配置工厂
Singleton <-- Abstrac_Factory: 单个实例
Singleton <-- Facade: 单个实例

@enduml